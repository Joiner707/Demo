server:
  port: 8081

spring:
  datasource:
    druid:
      qa:
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://10.100.110.110/nim_perfdev?useUnicode=true&serverTimezone=Asia/Shanghai&characterEncoding=UTF-8&useSSL=false&autoReconnect=true
        username: perf
        password: perftest
        type: com.alibaba.druid.pool.DruidDataSource
      testing:
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://localhost:3306/nim_perfdev?useUnicode=true&serverTimezone=Asia/Shanghai&characterEncoding=UTF-8&useSSL=false&autoReconnect=true
        username: test
        password: abc123
        type: com.alibaba.druid.pool.DruidDataSource
      filters: stat,wall,log4j
      maxPoolPreparedStatementPerConnectionSize: 20
      useGlobalDataSourceStat: true
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500
      initialSize: 5
      minIdle: 5
      maxActive: 20
      maxWait: 60000
      timeBetweenEvictionRunsMillis: 60000
      minEvictableIdleTimeMillis: 300000
      validationQuery: SELECT 1 FROM DUAL
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      poolPreparedStatements: true
  profiles:
    active: dev
  redis:
    host: localhost
    port: 6379
    password: 123456
    database: 0
    timeout: 300
    jedis:
      pool:
        max-active: 8
        # 连接池最大连接数（使用负值表示没有限制）
        max-idle: 8
        # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: -1
        min-idle: 0
    # 自定义
    pre:
      host: localhost
      port: 6379
      password: 123456
  data:
    elasticsearch:
      cluster-name: my-application
      #节点的地址 注意api模式下端口号是9300，千万不要写成9200
      cluster-nodes: 127.0.0.1:9300
      repositories:
        enabled: true
  application:
    name: demo
nacos:
  config:
    server-addr: 10.122.91.32:8848

logging:
  config: classpath:config/logback.xml

mapper:
  mappers: tk.mybatis.mapper.common.Mapper
  style: camelhump
  identity: MYSQL

pagehelper:
  auto-dialect: true
  helper-dialect: mysql
  reasonable: true
  params: count=countSql

management:
  server:
    port: 8090
    servlet.context-path: /system
  endpoint:
    health:
      show-details: always
    web:
      exposure:
        include: '*'

